// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  wallet    Wallet?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Wallet {
  id            String         @id @default(uuid())
  user          User           @relation(fields: [userId], references: [id])
  userId        String         @unique
  assets        Asset[]
  transactions  Transaction[]
  alerts        Alert[]
  snapshots     Snapshot[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Asset {
  id          String        @id @default(uuid())
  ticker      String
  wallet      Wallet        @relation(fields: [walletId], references: [id])
  walletId    String
  transactions Transaction[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Transaction {
  id            String      @id @default(uuid())
  type          TransactionType
  quantity      Float
  pricePerUnit  Float
  date          DateTime
  wallet        Wallet       @relation(fields: [walletId], references: [id])
  walletId      String
  asset         Asset        @relation(fields: [assetId], references: [id])
  assetId       String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Alert {
  id            String      @id @default(uuid())
  ticker        String
  targetPrice   Float
  direction     AlertDirection
  notified      Boolean     @default(false)
  wallet        Wallet      @relation(fields: [walletId], references: [id])
  walletId      String
  createdAt     DateTime    @default(now())
}

model Snapshot {
  id            String      @id @default(uuid())
  wallet        Wallet      @relation(fields: [walletId], references: [id])
  walletId      String
  totalInvested Float
  totalValue    Float
  profitLoss    Float
  date          DateTime
  createdAt     DateTime    @default(now())
}

enum TransactionType {
  BUY
  SELL
}

enum AlertDirection {
  ABOVE
  BELOW
}
